# Docker Compose for AutoGen Code Review Bot
# Production-ready deployment with monitoring and security

version: '3.8'

services:
  autogen-bot:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        PYTHON_VERSION: "3.11"
    image: autogen-code-review-bot:latest
    container_name: autogen-bot
    restart: unless-stopped
    
    # Security configurations
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    user: "1000:1000"
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 256M
    
    # Environment configuration
    environment:
      - PYTHONPATH=/app
      - GITHUB_TOKEN_FILE=/run/secrets/github_token
      - WEBHOOK_SECRET_FILE=/run/secrets/webhook_secret
      - LOG_LEVEL=INFO
      - CACHE_TTL_HOURS=24
    
    # Secrets management
    secrets:
      - github_token
      - webhook_secret
    
    # Volumes for persistent data
    volumes:
      - cache_data:/home/appuser/.cache/autogen-review:rw
      - ./logs:/app/logs:rw
      - /tmp:/tmp:rw
    
    # Network configuration
    ports:
      - "8080:8080"
    networks:
      - autogen-network
    
    # Health check
    healthcheck:
      test: ["CMD", "python", "-c", "import autogen_code_review_bot; print('OK')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    
    # Logging configuration
    logging:
      driver: "json-file"
      options:
        max-size: "100m"
        max-file: "3"
        labels: "service=autogen-bot"

  # Optional: Redis for caching (production)
  redis:
    image: redis:7-alpine
    container_name: autogen-redis
    restart: unless-stopped
    
    # Security
    security_opt:
      - "no-new-privileges:true"
    read_only: true
    user: "999:999"
    
    # Configuration
    command: ["redis-server", "--appendonly", "yes", "--maxmemory", "256mb", "--maxmemory-policy", "allkeys-lru"]
    
    # Volumes
    volumes:
      - redis_data:/data:rw
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.1'
          memory: 64M
    
    networks:
      - autogen-network
    
    # Health check
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # Optional: Monitoring with Prometheus metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: autogen-prometheus
    restart: unless-stopped
    
    # Configuration
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    
    # Volumes
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus:rw
    
    ports:
      - "9090:9090"
    
    networks:
      - autogen-network
    
    # Resource limits
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 512M

# Network configuration
networks:
  autogen-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/24

# Persistent volumes
volumes:
  cache_data:
    driver: local
  redis_data:
    driver: local
  prometheus_data:
    driver: local

# Secrets (use Docker Swarm secrets or external secret management)
secrets:
  github_token:
    external: true
  webhook_secret:
    external: true