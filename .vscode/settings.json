```json
{
  "python.defaultInterpreterPath": "./venv/bin/python",
  "python.terminal.activateEnvironment": true,
  "python.envFile": "${workspaceFolder}/.env",
  
  // Python formatting and linting
  "python.linting.enabled": true,
  "python.linting.ruffEnabled": true,
  "python.linting.pylintEnabled": false,
  "python.linting.flake8Enabled": false,
  "python.linting.banditEnabled": true,
  "python.linting.mypyEnabled": true,
  
  "python.linting.ruffArgs": ["--config=pyproject.toml"],
  "python.linting.banditArgs": ["-c", "pyproject.toml"],
  "python.linting.mypyArgs": ["--config-file=pyproject.toml"],
  
  "python.formatting.provider": "none",
  "[python]": {
    "editor.defaultFormatter": "charliermarsh.ruff",
    "editor.formatOnSave": true,
    "editor.codeActionsOnSave": {
      "source.organizeImports": true,
      "source.fixAll": true,
      "source.fixAll.ruff": true,
      "source.fixAll.mypy": true
    },
    "editor.rulers": [88]
  },
  
  // Testing
  "python.testing.pytestEnabled": true,
  "python.testing.pytestArgs": [
    "tests",
    "--strict-markers",
    "--strict-config",
    "--cov=autogen_code_review_bot",
    "--cov-report=html",
    "--cov-report=term-missing"
  ],
  "python.testing.unittestEnabled": false,
  "python.testing.nosetestsEnabled": false,
  
  // Editor settings
  "editor.formatOnSave": true,
  "editor.formatOnPaste": false,
  "editor.formatOnType": false,
  "editor.codeActionsOnSave": {
    "source.organizeImports": true,
    "source.fixAll.ruff": true,
    "source.fixAll.mypy": true
  },
  "editor.rulers": [88],
  "editor.tabSize": 4,
  "editor.insertSpaces": true,
  "editor.detectIndentation": false,
  "editor.trimAutoWhitespace": true,
  "files.trimTrailingWhitespace": true,
  "files.insertFinalNewline": true,
  "files.trimFinalNewlines": true,
  
  // File associations
  "files.associations": {
    "*.yaml": "yaml",
    "*.yml": "yaml",
    "Dockerfile*": "dockerfile",
    "Makefile": "makefile",
    ".env*": "properties"
  },
  
  // Files and search exclusions
  "files.exclude": {
    "**/__pycache__": true,
    "**/*.pyc": true,
    ".pytest_cache": true,
    ".coverage": true,
    "htmlcov": true,
    ".mypy_cache": true,
    ".ruff_cache": true,
    "*.egg-info": true,
    "dist": true,
    "build": true
  },
  "files.watcherExclude": {
    "**/__pycache__/**": true,
    "**/.pytest_cache/**": true,
    "**/.mypy_cache/**": true,
    "**/.ruff_cache/**": true
  },
  "search.exclude": {
    "**/node_modules": true,
    "**/bower_components": true,
    "**/*.code-search": true,
    "**/__pycache__": true,
    "**/.pytest_cache": true,
    "**/.mypy_cache": true,
    "**/.ruff_cache": true,
    "**/.git": true,
    "**/.DS_Store": true,
    "**/tmp": true,
    "**/dist": true,
    "**/build": true,
    "**/*.pyc": true,
    "**/htmlcov": true,
    "**/.coverage": true,
    "**/venv": true,
    "**/.venv": true,
    "**/*.egg-info": true
  },
  
  // Git settings
  "git.autofetch": true,
  "git.enableSmartCommit": true,
  "git.ignoreLimitWarning": true,
  "git.confirmSync": false,
  
  // Terminal settings
  "terminal.integrated.defaultProfile.linux": "bash",
  "terminal.integrated.env.linux": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "terminal.integrated.env.osx": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  "terminal.integrated.env.windows": {
    "PYTHONPATH": "${workspaceFolder}/src"
  },
  
  // YAML validation
  "yaml.validate": true,
  "yaml.format.enable": true,
  "yaml.schemas": {
    "https://json.schemastore.org/github-workflow.json": ".github/workflows/*.{yml,yaml}",
    "https://json.schemastore.org/github-action.json": "action.{yml,yaml}",
    "https://json.schemastore.org/pre-commit-config.json": ".pre-commit-config.yaml"
  },
  
  // Other formatters
  "json.format.enable": true,
  "makefile.configureOnOpen": true,
  
  // Docker settings
  "docker.showStartPage": false,
  
  // Python analysis
  "python.analysis.extraPaths": [
    "./src"
  ],
  "python.analysis.autoImportCompletions": true,
  "python.analysis.typeCheckingMode": "basic",
  
  // Coverage Gutters
  "coverage-gutters.coverageFileNames": [
    "coverage.xml",
    "coverage.lcov",
    ".coverage"
  ],
  "coverage-gutters.showLineCoverage": true,
  "coverage-gutters.showRulerCoverage": true,
  
  // Error Lens
  "errorLens.enabledDiagnosticLevels": [
    "error",
    "warning"
  ],
  
  // Spell checker
  "cSpell.words": [
    "autogen",
    "pyautogen",
    "openai",
    "github",
    "webhook",
    "pytest",
    "ruff",
    "bandit",
    "mypy",
    "pylint",
    "mkdocs",
    "terragon",
    "dockerfile",
    "devcontainer",
    "locust",
    "structlog",
    "psutil",
    "tenacity"
  ],
  
  // Notebook settings (if using Jupyter)
  "notebook.formatOnSave.enabled": true,
  "notebook.codeActionsOnSave": {
    "source.organizeImports": true
  }
}
```
