# Enterprise Configuration for AutoGen Code Review Bot
# Production-ready settings with security, scalability, and monitoring

# Application Configuration
app:
  name: "autogen-code-review-bot"
  version: "2.0.0"
  environment: "production"
  debug: false
  
# Server Configuration
server:
  host: "0.0.0.0"
  port: 8080
  workers: 4
  threads_per_worker: 2
  max_connections: 1000
  timeout: 300
  keep_alive: 60
  
# Database Configuration
database:
  url: "${POSTGRES_URL}"
  pool_size: 20
  max_overflow: 30
  pool_timeout: 30
  pool_recycle: 3600
  echo: false
  
# Redis Configuration
redis:
  url: "${REDIS_URL}"
  connection_pool_size: 50
  socket_timeout: 5
  socket_connect_timeout: 5
  retry_on_timeout: true
  decode_responses: true
  
# Message Queue Configuration
rabbitmq:
  url: "${RABBITMQ_URL}"
  connection_attempts: 5
  retry_delay: 5
  heartbeat: 600
  prefetch_count: 10
  
# Authentication & Authorization
auth:
  secret_key: "${API_SECRET_KEY}"
  algorithm: "HS256"
  token_expiry_hours: 24
  refresh_token_expiry_days: 30
  max_login_attempts: 5
  lockout_duration_minutes: 15
  
# GitHub Integration
github:
  api_url: "https://api.github.com"
  webhook_secret: "${GITHUB_WEBHOOK_SECRET}"
  bot_token: "${GITHUB_TOKEN}"
  app_id: "${GITHUB_APP_ID}"
  private_key_path: "${GITHUB_PRIVATE_KEY_PATH}"
  timeout: 30
  retries: 3
  
# Rate Limiting
rate_limiting:
  enabled: true
  default_daily_limit: 1000
  default_hourly_limit: 100
  premium_daily_limit: 10000
  premium_hourly_limit: 1000
  burst_limit: 50
  
# Analysis Configuration
analysis:
  timeout: 600  # 10 minutes
  max_file_size_mb: 50
  max_files_per_analysis: 10000
  parallel_workers: 4
  cache_ttl_hours: 24
  
  # Security Scanning
  security:
    enabled: true
    tools:
      - bandit
      - safety
      - semgrep
      - trivy
      - detect-secrets
    severity_threshold: "medium"
    fail_on_critical: true
    
  # Style Analysis
  style:
    enabled: true
    linters:
      python: "ruff"
      javascript: "eslint"
      typescript: "eslint"
      go: "golangci-lint"
      rust: "clippy"
      java: "checkstyle"
      ruby: "rubocop"
    max_issues: 500
    
  # Performance Analysis
  performance:
    enabled: true
    complexity_threshold: 10
    file_size_threshold_kb: 1000
    analyze_dependencies: true
    
# Agent Configuration
agents:
  coder:
    model: "gpt-4"
    temperature: 0.3
    max_tokens: 2000
    focus_areas:
      - "functionality"
      - "bugs"
      - "edge_cases"
      - "performance"
    
  reviewer:
    model: "gpt-4"
    temperature: 0.1
    max_tokens: 2000
    focus_areas:
      - "security"
      - "maintainability"
      - "best_practices"
      - "documentation"
      
  conversation:
    max_turns: 6
    resolution_keywords:
      - "resolved"
      - "agreed"
      - "confirmed"
      - "completed"
    sentiment_threshold: 0.7
    
# Quantum Planning Configuration
quantum:
  enabled: true
  max_tasks: 1000
  coherence_time: 3600  # 1 hour
  interference_factor: 0.1
  entanglement_threshold: 0.8
  measurement_samples: 10
  
  optimization:
    cache_size: 10000
    cache_ttl: 1800  # 30 minutes
    parallel_workers: 8
    load_balancer_threshold: 0.8
    auto_scaling_enabled: true
    
# Logging Configuration
logging:
  level: "INFO"
  format: "structured"
  handlers:
    - console
    - file
    - elasticsearch
  
  file:
    path: "/app/logs"
    rotation: "daily"
    retention_days: 30
    max_size_mb: 100
    
  elasticsearch:
    host: "elasticsearch:9200"
    index_prefix: "autogen-logs"
    
# Monitoring Configuration
monitoring:
  enabled: true
  
  metrics:
    prometheus_port: 9090
    collection_interval: 15
    retention_days: 30
    
  tracing:
    jaeger_endpoint: "http://jaeger:14268/api/traces"
    sample_rate: 0.1
    
  alerting:
    enabled: true
    channels:
      - email
      - slack
      - webhook
    
    rules:
      high_error_rate:
        threshold: 0.05
        duration: "5m"
        severity: "warning"
        
      service_down:
        threshold: 0
        duration: "1m"
        severity: "critical"
        
      high_latency:
        threshold: 2000  # ms
        duration: "10m"
        severity: "warning"
        
# Security Configuration
security:
  cors:
    enabled: true
    origins:
      - "https://*.company.com"
      - "https://*.enterprise.local"
    methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
    headers:
      - "Authorization"
      - "Content-Type"
      - "X-Request-ID"
      
  tls:
    enabled: true
    cert_path: "/etc/ssl/certs/server.crt"
    key_path: "/etc/ssl/private/server.key"
    min_version: "1.2"
    
  headers:
    x_frame_options: "DENY"
    x_content_type_options: "nosniff"
    x_xss_protection: "1; mode=block"
    strict_transport_security: "max-age=31536000; includeSubDomains"
    
# Performance Configuration
performance:
  caching:
    enabled: true
    default_ttl: 3600
    max_memory_mb: 1024
    compression: true
    
  connection_pooling:
    enabled: true
    max_connections: 100
    min_connections: 5
    
  async_processing:
    enabled: true
    queue_size: 10000
    batch_size: 100
    
# Backup Configuration
backup:
  enabled: true
  schedule: "0 2 * * *"  # Daily at 2 AM
  retention_days: 30
  
  destinations:
    - type: "s3"
      bucket: "${BACKUP_S3_BUCKET}"
      region: "${AWS_REGION}"
      
    - type: "local"
      path: "/app/backups"
      
# Enterprise Features
enterprise:
  multi_tenancy:
    enabled: true
    isolation_level: "strict"
    
  audit_logging:
    enabled: true
    retention_years: 7
    encryption: true
    
  compliance:
    gdpr: true
    hipaa: true
    sox: true
    
  integration:
    ldap:
      enabled: false
      server: "${LDAP_SERVER}"
      bind_dn: "${LDAP_BIND_DN}"
      
    saml:
      enabled: false
      idp_url: "${SAML_IDP_URL}"
      sp_cert: "${SAML_SP_CERT}"
      
    webhook:
      enabled: true
      endpoints:
        - url: "${WEBHOOK_URL_1}"
          events: ["analysis.completed", "security.alert"]
        - url: "${WEBHOOK_URL_2}"
          events: ["system.error"]
          
# Development/Testing Overrides
development:
  debug: true
  hot_reload: true
  mock_external_services: false
  test_data_enabled: true
  
testing:
  parallel_tests: true
  coverage_threshold: 85
  integration_tests: true
  load_testing: true